// { Driver Code Starts
//Initial Template for C++
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
//User function Template for C++
class Solution
{
public:
    long long countStrings(string S)
    {
        // code here
        long long length=S.size();
        long long count=0;
        long long temp=0;
        for(int i=0;i<length-1;i++)
        {
            for(int j=i+1;j<length;j++)
            {
                if(S[i]!=S[j])
                {
                    count++;
                }
                else
                {
                    temp++;
                }
            }
        }
        if(temp==0)
        {
            return count;
        }
        else
        {
            return count+1;
        }
    }
};


// { Driver Code Starts.
int main()
{
    int t;
    cin >> t;
    while (t--) {
        string S;
        cin>>S;
        Solution ob;
        long long ans = ob.countStrings(S);
        cout<<ans<<endl;
    }
    return 0;
}   // } Driver Code Ends





















//Smallest missing positive number
//My code  --- that could not pass all test cases
// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends


class Solution
{
    public:
    //Function to find the smallest positive number missing from the array.
    int missingNumber(int arr[], int n) 
    { 
        // Your code here
        sort(arr,arr+n);
        int firstpositive=0;
        for(int i=0;i<n;i++)
        {
            if(arr[i]>0)
            {
               firstpositive=i;
               break;
            }
        }
        cout<<firstpositive<<endl;
        for(int i=firstpositive;i<n;i++)
        {
            if(arr[i]>1)
            {
               return 1; 
            }
            else
            {
                 if(arr[i+1]>arr[i]+1)
                 {
                      return arr[i]+1;
                 }
            }
        }
    } 
};

// { Driver Code Starts.

int missingNumber(int arr[], int n);

int main() { 
    
    //taking testcases
    int t;
    cin>>t;
    while(t--){
        
        //input number n
        int n;
        cin>>n;
        int arr[n];
        
        //adding elements to the array
        for(int i=0; i<n; i++)cin>>arr[i];
        
        Solution ob;
        //calling missingNumber()
        cout<<ob.missingNumber(arr, n)<<endl;
    }
    return 0; 
}   // } Driver Code Ends
